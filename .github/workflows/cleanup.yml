name: Cleanup Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to cleanup'
        required: true
        type: choice
        options:
          - dev
          - test
      confirm_destroy:
        description: 'Type "DESTROY" to confirm resource cleanup'
        required: true
        default: ''

env:
  TF_VERSION: "1.5.0"

jobs:
  validate-cleanup:
    name: Validate Cleanup Request
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "❌ Cleanup cancelled. You must type 'DESTROY' to confirm."
            exit 1
          fi
          
          if [ "${{ github.event.inputs.environment }}" == "prd" ]; then
            echo "❌ Production environment cannot be cleaned up via this workflow."
            exit 1
          fi
          
          echo "✅ Cleanup validated for ${{ github.event.inputs.environment }} environment"

  cleanup:
    name: Cleanup ${{ github.event.inputs.environment }} Environment
    runs-on: ubuntu-latest
    needs: [validate-cleanup]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Set GCP Credentials Secret Name
        id: secrets
        run: |
          ENV="${{ github.event.inputs.environment }}"
          if [ "$ENV" = "dev" ]; then
            echo "sa_key_secret=GCP_SA_KEY_DEV" >> $GITHUB_OUTPUT
            echo "project_id_secret=GCP_PROJECT_ID_DEV" >> $GITHUB_OUTPUT
          elif [ "$ENV" = "test" ]; then
            echo "sa_key_secret=GCP_SA_KEY_TEST" >> $GITHUB_OUTPUT
            echo "project_id_secret=GCP_PROJECT_ID_TEST" >> $GITHUB_OUTPUT
          fi

      - name: Configure GCP Credentials (DEV)
        if: github.event.inputs.environment == 'dev'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_DEV }}

      - name: Configure GCP Credentials (TEST)
        if: github.event.inputs.environment == 'test'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_TEST }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Terraform Init
        run: |
          cd environments/${{ github.event.inputs.environment }}
          terraform init

      - name: Terraform Plan Destroy (DEV)
        if: github.event.inputs.environment == 'dev'
        run: |
          cd environments/${{ github.event.inputs.environment }}
          terraform plan -destroy -var="project_id=${{ secrets.GCP_PROJECT_ID_DEV }}" -out=destroy.tfplan

      - name: Terraform Plan Destroy (TEST)
        if: github.event.inputs.environment == 'test'
        run: |
          cd environments/${{ github.event.inputs.environment }}
          terraform plan -destroy -var="project_id=${{ secrets.GCP_PROJECT_ID_TEST }}" -out=destroy.tfplan

      - name: Terraform Destroy
        run: |
          cd environments/${{ github.event.inputs.environment }}
          terraform apply destroy.tfplan

      - name: Cleanup Summary
        run: |
          echo "## 🧹 Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Cleaned by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Cleanup time:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Resources Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "- Cloud Function: ✅ Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "- Load Balancer: ✅ Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "- Cloud Armor Policy: ✅ Destroyed" >> $GITHUB_STEP_SUMMARY
          echo "- Storage Bucket: ✅ Destroyed" >> $GITHUB_STEP_SUMMARY 